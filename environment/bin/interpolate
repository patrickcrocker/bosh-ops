#! /usr/bin/env bash
set -euo pipefail

# Usage:
#
# To generate a manifest with variable interpolation placeholders intact,
# suitable to be committed to source control:
#
#   $ ./bin/interpolate
#
# To generate a manifest with variable interpolated into the manifest,
# suitable for `bosh create-env`, but NOT to be committed:
#
#   $ ./bin/interpolate --vars-file <path> --vars-store <path>

repo="$( cd "$( dirname "${BASH_SOURCE[0]}" )/../.." && pwd )"

# make sure we have bosh-deployment
if [[ ! -d "${repo}/tmp/bosh-deployment" ]] ; then
  pushd ${repo}/tmp > /dev/null
    git clone https://github.com/cloudfoundry/bosh-deployment.git &> /dev/null
  popd > /dev/null
fi

# checkout specific version of bosh-deployment
BOSH_REF="afbd52c8a8077b8a499d05fe1d9b8812a37220c7"
echo "Checking out to bosh-deployment to ref: ${BOSH_REF}"

pushd ${repo}/tmp/bosh-deployment > /dev/null
  git fetch &> /dev/null
  git checkout ${BOSH_REF} &> /dev/null
  git log -1 --pretty=oneline
popd > /dev/null

# Generated manifest
manifest="${repo}/environment/bosh.yml"

bosh interpolate "${repo}/tmp/bosh-deployment/bosh.yml" \
  -o "${repo}/tmp/bosh-deployment/vsphere/cpi.yml" \
  -o "${repo}/tmp/bosh-deployment/jumpbox-user.yml" \
  -o "${repo}/tmp/bosh-deployment/uaa.yml" \
  -o "${repo}/tmp/bosh-deployment/credhub.yml" \
  -o "${repo}/tmp/bosh-deployment/misc/dns.yml" \
  -o "${repo}/environment/ops-files/bosh.yml" \
   > "${manifest}"

echo -e "# Generated file - do not edit directly!\n---\n$(cat $manifest)" > "$manifest"
echo "Generating manifest: $manifest"

bosh interpolate "${repo}/environment/templates/cloud-config.yml" \
  -o "${repo}/tmp/bosh-deployment/misc/dns.yml" \
  > "${repo}/environment/cloud-config.yml"

echo "Generated cloud config : ${repo}/environment/cloud-config.yml"
