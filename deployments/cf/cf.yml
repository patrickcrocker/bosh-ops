# Generated file - do not edit directly!
---
addons:
- exclude:
    jobs:
    - name: smoke_tests
      release: cf-smoke-tests
  include:
    stemcell:
    - os: ubuntu-bionic
    - os: ubuntu-jammy
  jobs:
  - name: loggregator_agent
    properties:
      disable_udp: true
      grpc_port: 3459
      loggregator:
        tls:
          agent:
            cert: ((loggregator_tls_agent.certificate))
            key: ((loggregator_tls_agent.private_key))
          ca_cert: ((loggregator_tls_agent.ca))
      metrics:
        ca_cert: ((loggregator_agent_metrics_tls.ca))
        cert: ((loggregator_agent_metrics_tls.certificate))
        key: ((loggregator_agent_metrics_tls.private_key))
        server_name: loggregator_agent_metrics
    release: loggregator-agent
  name: loggregator_agent
- include:
    stemcell:
    - os: ubuntu-bionic
    - os: ubuntu-jammy
  jobs:
  - name: loggr-forwarder-agent
    properties:
      metrics:
        ca_cert: ((forwarder_agent_metrics_tls.ca))
        cert: ((forwarder_agent_metrics_tls.certificate))
        key: ((forwarder_agent_metrics_tls.private_key))
        server_name: forwarder_agent_metrics
      tls:
        ca_cert: ((loggregator_tls_agent.ca))
        cert: ((loggregator_tls_agent.certificate))
        key: ((loggregator_tls_agent.private_key))
    release: loggregator-agent
  name: forwarder_agent
- exclude:
    jobs:
    - name: smoke_tests
      release: cf-smoke-tests
  include:
    stemcell:
    - os: ubuntu-bionic
    - os: ubuntu-jammy
  jobs:
  - name: loggr-syslog-agent
    properties:
      cache:
        tls:
          ca_cert: ((syslog_agent_api_tls.ca))
          cert: ((syslog_agent_api_tls.certificate))
          cn: binding-cache
          key: ((syslog_agent_api_tls.private_key))
      metrics:
        ca_cert: ((syslog_agent_metrics_tls.ca))
        cert: ((syslog_agent_metrics_tls.certificate))
        key: ((syslog_agent_metrics_tls.private_key))
        server_name: syslog_agent_metrics
      port: 3460
      tls:
        ca_cert: ((loggregator_tls_agent.ca))
        cert: ((loggregator_tls_agent.certificate))
        key: ((loggregator_tls_agent.private_key))
    release: loggregator-agent
  name: loggr-syslog-agent
- exclude:
    jobs:
    - name: smoke_tests
      release: cf-smoke-tests
  include:
    stemcell:
    - os: ubuntu-bionic
    - os: ubuntu-jammy
  jobs:
  - name: prom_scraper
    properties:
      metrics:
        ca_cert: ((prom_scraper_metrics_tls.ca))
        cert: ((prom_scraper_metrics_tls.certificate))
        key: ((prom_scraper_metrics_tls.private_key))
        server_name: prom_scraper_metrics
      scrape:
        tls:
          ca_cert: ((prom_scraper_scrape_tls.ca))
          cert: ((prom_scraper_scrape_tls.certificate))
          key: ((prom_scraper_scrape_tls.private_key))
      scrape_interval: 60s
    release: loggregator-agent
  name: prom_scraper
- include:
    stemcell:
    - os: ubuntu-bionic
    - os: ubuntu-jammy
  jobs:
  - name: bpm
    release: bpm
  name: bpm
- jobs:
  - name: bosh-dns-aliases
    properties:
      aliases:
      - domain: _.cell.service.cf.internal
        targets:
        - deployment: ((deployment_name))
          domain: bosh
          instance_group: diego-cell
          network: ((network_name))
          query: _
        - deployment: ((deployment_name))
          domain: bosh
          instance_group: isolated-diego-cell
          network: ((network_name))
          query: _
      - domain: auctioneer.service.cf.internal
        targets:
        - deployment: ((deployment_name))
          domain: bosh
          instance_group: scheduler
          network: ((network_name))
          query: '*'
      - domain: bbs.service.cf.internal
        targets:
        - deployment: ((deployment_name))
          domain: bosh
          instance_group: diego-api
          network: ((network_name))
          query: q-s4
      - domain: blobstore.service.cf.internal
        targets:
        - deployment: ((deployment_name))
          domain: bosh
          instance_group: singleton-blobstore
          network: ((network_name))
          query: '*'
      - domain: cc-uploader.service.cf.internal
        targets:
        - deployment: ((deployment_name))
          domain: bosh
          instance_group: api
          network: ((network_name))
          query: '*'
      - domain: cloud-controller-ng.service.cf.internal
        targets:
        - deployment: ((deployment_name))
          domain: bosh
          instance_group: api
          network: ((network_name))
          query: '*'
      - domain: credhub.service.cf.internal
        targets:
        - deployment: ((deployment_name))
          domain: bosh
          instance_group: credhub
          network: ((network_name))
          query: '*'
      - domain: doppler.service.cf.internal
        targets:
        - deployment: ((deployment_name))
          domain: bosh
          instance_group: doppler
          network: ((network_name))
          query: '*'
      - domain: log-cache.service.cf.internal
        targets:
        - deployment: ((deployment_name))
          domain: bosh
          instance_group: log-cache
          network: ((network_name))
          query: '*'
      - domain: file-server.service.cf.internal
        targets:
        - deployment: ((deployment_name))
          domain: bosh
          instance_group: api
          network: ((network_name))
          query: '*'
      - domain: gorouter.service.cf.internal
        targets:
        - deployment: ((deployment_name))
          domain: bosh
          instance_group: router
          network: ((network_name))
          query: '*'
      - domain: locket.service.cf.internal
        targets:
        - deployment: ((deployment_name))
          domain: bosh
          instance_group: diego-api
          network: ((network_name))
          query: '*'
      - domain: loggregator-trafficcontroller.service.cf.internal
        targets:
        - deployment: ((deployment_name))
          domain: bosh
          instance_group: log-api
          network: ((network_name))
          query: '*'
      - domain: nats.service.cf.internal
        targets:
        - deployment: ((deployment_name))
          domain: bosh
          instance_group: nats
          network: ((network_name))
          query: '*'
      - domain: _.nats.service.cf.internal
        targets:
        - deployment: ((deployment_name))
          domain: bosh
          instance_group: nats
          network: ((network_name))
          query: _
      - domain: policy-server.service.cf.internal
        targets:
        - deployment: ((deployment_name))
          domain: bosh
          instance_group: api
          network: ((network_name))
          query: '*'
      - domain: reverse-log-proxy.service.cf.internal
        targets:
        - deployment: ((deployment_name))
          domain: bosh
          instance_group: log-api
          network: ((network_name))
          query: '*'
      - domain: routing-api.service.cf.internal
        targets:
        - deployment: ((deployment_name))
          domain: bosh
          instance_group: api
          network: ((network_name))
          query: '*'
      - domain: silk-controller.service.cf.internal
        targets:
        - deployment: ((deployment_name))
          domain: bosh
          instance_group: diego-api
          network: ((network_name))
          query: '*'
      - domain: sql-db.service.cf.internal
        targets:
        - deployment: ((deployment_name))
          domain: bosh
          instance_group: database
          network: ((network_name))
          query: '*'
      - domain: ssh-proxy.service.cf.internal
        targets:
        - deployment: ((deployment_name))
          domain: bosh
          instance_group: scheduler
          network: ((network_name))
          query: '*'
      - domain: tps.service.cf.internal
        targets:
        - deployment: ((deployment_name))
          domain: bosh
          instance_group: scheduler
          network: ((network_name))
          query: '*'
      - domain: uaa.service.cf.internal
        targets:
        - deployment: ((deployment_name))
          domain: bosh
          instance_group: uaa
          network: ((network_name))
          query: '*'
    release: bosh-dns-aliases
  name: bosh-dns-aliases
instance_groups:
- azs:
  - z1
  instances: 1
  jobs:
  - name: smoke_tests
    properties:
      bpm:
        enabled: true
      smoke_tests:
        api: https://api.((system_domain))
        apps_domain: ((smoke_test_app_domain))
        cf_dial_timeout_in_seconds: 300
        client: cf_smoke_tests
        client_secret: ((uaa_clients_cf_smoke_tests_secret))
        org: cf_smoke_tests_org
        space: cf_smoke_tests_space
    release: cf-smoke-tests
  - name: cf-cli-8-linux
    release: cf-cli
  lifecycle: errand
  name: smoke-tests
  networks:
  - name: ((network_name))
  stemcell: default
  vm_type: minimal
- azs:
  - z1
  instances: 1
  jobs:
  - name: nats-tls
    properties:
      nats:
        client:
          tls:
            ca: ((nats_client_cert.ca))
            certificate: ((nats_client_cert.certificate))
            private_key: ((nats_client_cert.private_key))
        external:
          tls:
            ca: ((nats_server_cert.ca))
            certificate: ((nats_server_cert.certificate))
            private_key: ((nats_server_cert.private_key))
        fail_deployment_if_v1: true
        hostname: nats.service.cf.internal
        internal:
          tls:
            ca: ((nats_internal_cert.ca))
            certificate: ((nats_internal_cert.certificate))
            enabled: true
            private_key: ((nats_internal_cert.private_key))
        password: ((nats_password))
        user: nats
    provides:
      nats-tls:
        as: nats-tls
        shared: true
    release: nats
  name: nats
  networks:
  - name: ((network_name))
  stemcell: default
  vm_type: minimal
- azs:
  - z1
  instances: 1
  jobs:
  - name: pxc-mysql
    properties:
      admin_password: ((cf_mysql_mysql_admin_password))
      engine_config:
        binlog:
          enabled: false
        galera:
          enabled: true
      mysql_version: "8.0"
      port: 13306
      seeded_databases:
      - name: cloud_controller
        password: ((cc_database_password))
        username: cloud_controller
      - name: diego
        password: ((diego_database_password))
        username: diego
      - name: network_connectivity
        password: ((network_connectivity_database_password))
        username: network_connectivity
      - name: network_policy
        password: ((network_policy_database_password))
        username: network_policy
      - name: routing-api
        password: ((routing_api_database_password))
        username: routing-api
      - name: uaa
        password: ((uaa_database_password))
        username: uaa
      - name: locket
        password: ((locket_database_password))
        username: locket
      - name: credhub
        password: ((credhub_database_password))
        username: credhub
      tls:
        galera: ((galera_server_certificate))
        server: ((mysql_server_certificate))
    release: pxc
  - name: proxy
    properties:
      api_password: ((cf_mysql_proxy_api_password))
      api_port: 8083
      api_uri: proxy.((system_domain))
    release: pxc
  - name: galera-agent
    properties:
      db_password: ((cf_mysql_mysql_galera_healthcheck_password))
      endpoint_password: ((cf_mysql_mysql_galera_healthcheck_endpoint_password))
    release: pxc
  - name: gra-log-purger
    release: pxc
  - name: cluster-health-logger
    properties:
      db_password: ((cf_mysql_mysql_cluster_health_password))
    release: pxc
  - name: route_registrar
    properties:
      nats:
        tls:
          client_cert: ((nats_client_cert.certificate))
          client_key: ((nats_client_cert.private_key))
          enabled: true
      route_registrar:
        routes:
        - name: cf-mysql-proxy
          port: 8083
          prepend_instance_index: true
          registration_interval: 10s
          uris:
          - proxy.((system_domain))
        - name: cf-mysql-proxy-aggregator
          port: 8082
          registration_interval: 10s
          uris:
          - proxy.((system_domain))
    release: routing
  - name: bootstrap
    release: pxc
  migrated_from:
  - name: mysql
  - name: singleton-database
  name: database
  networks:
  - name: ((network_name))
  persistent_disk_type: 10GB
  stemcell: default
  update:
    serial: true
  vm_type: small
- azs:
  - z1
  instances: 1
  jobs:
  - name: cfdot
    properties:
      tls:
        ca_certificate: ((diego_rep_client.ca))
        certificate: ((diego_rep_client.certificate))
        private_key: ((diego_rep_client.private_key))
    release: diego
  - name: bbs
    properties:
      bpm:
        enabled: true
      diego:
        bbs:
          active_key_label: key-2016-06
          auctioneer:
            ca_cert: ((diego_auctioneer_client.ca))
            client_cert: ((diego_auctioneer_client.certificate))
            client_key: ((diego_auctioneer_client.private_key))
          ca_cert: ((diego_bbs_server.ca))
          detect_consul_cell_registrations: false
          encryption_keys:
          - label: key-2016-06
            passphrase: ((diego_bbs_encryption_keys_passphrase))
          rep:
            ca_cert: ((diego_rep_client.ca))
            client_cert: ((diego_rep_client.certificate))
            client_key: ((diego_rep_client.private_key))
            require_tls: true
          server_cert: ((diego_bbs_server.certificate))
          server_key: ((diego_bbs_server.private_key))
          skip_consul_lock: true
          sql:
            ca_cert: ((mysql_server_certificate.ca))
            db_driver: mysql
            db_host: sql-db.service.cf.internal
            db_password: ((diego_database_password))
            db_port: 3306
            db_schema: diego
            db_username: diego
            require_ssl: true
      enable_consul_service_registration: false
      logging:
        format:
          timestamp: rfc3339
      loggregator:
        app_metric_exclusion_filter:
        - absolute_entitlement
        - absolute_usage
        ca_cert: ((loggregator_tls_agent.ca))
        cert: ((loggregator_tls_agent.certificate))
        key: ((loggregator_tls_agent.private_key))
        use_v2_api: true
    release: diego
  - name: silk-controller
    properties:
      ca_cert: ((silk_controller.ca))
      database:
        ca_cert: ((mysql_server_certificate.ca))
        host: sql-db.service.cf.internal
        name: network_connectivity
        password: ((network_connectivity_database_password))
        port: 3306
        require_ssl: true
        type: mysql
        username: network_connectivity
      server_cert: ((silk_controller.certificate))
      server_key: ((silk_controller.private_key))
      silk_daemon:
        ca_cert: ((silk_daemon.ca))
        client_cert: ((silk_daemon.certificate))
        client_key: ((silk_daemon.private_key))
    release: silk
  - name: locket
    properties:
      bpm:
        enabled: true
      diego:
        locket:
          sql:
            ca_cert: ((mysql_server_certificate.ca))
            db_driver: mysql
            db_host: sql-db.service.cf.internal
            db_password: ((locket_database_password))
            db_port: 3306
            db_schema: locket
            db_username: locket
            require_ssl: true
      enable_consul_service_registration: false
      logging:
        format:
          timestamp: rfc3339
      loggregator:
        ca_cert: ((loggregator_tls_agent.ca))
        cert: ((loggregator_tls_agent.certificate))
        key: ((loggregator_tls_agent.private_key))
        use_v2_api: true
      tls:
        ca_cert: ((diego_locket_server.ca))
        cert: ((diego_locket_server.certificate))
        key: ((diego_locket_server.private_key))
    release: diego
  - name: loggr-udp-forwarder
    properties:
      loggregator:
        tls:
          ca: ((loggregator_tls_agent.ca))
          cert: ((loggregator_tls_agent.certificate))
          key: ((loggregator_tls_agent.private_key))
      metrics:
        ca_cert: ((loggr_udp_forwarder_tls.ca))
        cert: ((loggr_udp_forwarder_tls.certificate))
        key: ((loggr_udp_forwarder_tls.private_key))
        server_name: loggr_udp_forwarder_metrics
    release: loggregator-agent
  migrated_from:
  - name: diego-bbs
  name: diego-api
  networks:
  - name: ((network_name))
  stemcell: default
  vm_type: small
- azs:
  - z1
  instances: 1
  jobs:
  - name: uaa
    properties:
      encryption:
        active_key_label: default_key
        encryption_keys:
        - label: default_key
          passphrase: ((uaa_default_encryption_passphrase))
      login:
        saml:
          activeKeyId: key-1
          keys:
            key-1:
              certificate: ((uaa_login_saml.certificate))
              key: ((uaa_login_saml.private_key))
              passphrase: ""
      uaa:
        admin:
          client_secret: ((uaa_admin_client_secret))
        ca_certs:
        - ((mysql_server_certificate.ca))
        clients:
          cc-service-dashboards:
            authorities: clients.read,clients.write,clients.admin
            authorized-grant-types: client_credentials
            scopes:
            - openid
            - cloud_controller_service_permissions.read
            secret: ((uaa_clients_cc-service-dashboards_secret))
          cc_routing:
            authorities: routing.router_groups.read
            authorized-grant-types: client_credentials
            secret: ((uaa_clients_cc-routing_secret))
          cc_service_key_client:
            authorities: credhub.read,credhub.write
            authorized-grant-types: client_credentials
            secret: ((uaa_clients_cc_service_key_client_secret))
          cf:
            access-token-validity: 1200
            authorities: uaa.none
            authorized-grant-types: password,refresh_token
            override: true
            refresh-token-validity: 2592000
            scopes:
            - network.admin
            - network.write
            - cloud_controller.read
            - cloud_controller.write
            - openid
            - password.write
            - cloud_controller.admin
            - scim.read
            - scim.write
            - doppler.firehose
            - uaa.user
            - routing.router_groups.read
            - routing.router_groups.write
            - cloud_controller.admin_read_only
            - cloud_controller.global_auditor
            - perm.admin
            - clients.read
            secret: ""
          cf_smoke_tests:
            authorities: cloud_controller.admin,clients.read
            authorized-grant-types: client_credentials
            secret: ((uaa_clients_cf_smoke_tests_secret))
          cloud_controller_username_lookup:
            authorities: scim.userids,scim.read
            authorized-grant-types: client_credentials
            override: true
            secret: ((uaa_clients_cloud_controller_username_lookup_secret))
          credhub_admin_client:
            authorities: credhub.read,credhub.write
            authorized-grant-types: client_credentials
            secret: ((credhub_admin_client_secret))
          doppler:
            authorities: uaa.resource
            authorized-grant-types: client_credentials
            override: true
            secret: ((uaa_clients_doppler_secret))
          gorouter:
            authorities: routing.routes.read
            authorized-grant-types: client_credentials
            secret: ((uaa_clients_gorouter_secret))
          network-policy:
            authorities: uaa.resource,cloud_controller.admin_read_only
            authorized-grant-types: client_credentials
            secret: ((uaa_clients_network_policy_secret))
          routing_api_client:
            authorities: routing.routes.write,routing.routes.read,routing.router_groups.read
            authorized-grant-types: client_credentials
            secret: ((uaa_clients_routing_api_client_secret))
          ssh-proxy:
            authorized-grant-types: authorization_code
            autoapprove: true
            override: true
            redirect-uri: https://uaa.((system_domain))/login
            scopes:
            - openid
            - cloud_controller.read
            - cloud_controller.write
            - cloud_controller.admin
            secret: ((uaa_clients_ssh-proxy_secret))
          tcp_emitter:
            authorities: routing.routes.write,routing.routes.read
            authorized-grant-types: client_credentials
            secret: ((uaa_clients_tcp_emitter_secret))
          tcp_router:
            authorities: routing.routes.read,routing.router_groups.read
            authorized-grant-types: client_credentials
            secret: ((uaa_clients_tcp_router_secret))
        jwt:
          policy:
            active_key_id: key-1
            keys:
              key-1:
                signingKey: ((uaa_jwt_signing_key.private_key))
              key-2:
                signingAlg: RS256
                signingCert: ((uaa_jwt_signing_cert.certificate))
                signingKey: ((uaa_jwt_signing_cert.private_key))
        logging_level: INFO
        scim:
          users:
          - groups:
            - clients.read
            - cloud_controller.admin
            - doppler.firehose
            - network.admin
            - openid
            - routing.router_groups.read
            - routing.router_groups.write
            - scim.read
            - scim.write
            name: admin
            password: ((cf_admin_password))
        sslCertificate: ((uaa_ssl.certificate))
        sslPrivateKey: ((uaa_ssl.private_key))
        url: https://uaa.((system_domain))
        zones:
          internal:
            hostnames:
            - uaa.service.cf.internal
      uaadb:
        address: sql-db.service.cf.internal
        databases:
        - name: uaa
          tag: uaa
        db_scheme: mysql
        port: 3306
        roles:
        - name: uaa
          password: ((uaa_database_password))
          tag: admin
    release: uaa
  - name: route_registrar
    properties:
      nats:
        tls:
          client_cert: ((nats_client_cert.certificate))
          client_key: ((nats_client_cert.private_key))
          enabled: true
      route_registrar:
        routes:
        - health_check:
            name: uaa-healthcheck
            script_path: /var/vcap/jobs/uaa/bin/dns/healthy
          name: uaa
          registration_interval: 10s
          server_cert_domain_san: uaa.service.cf.internal
          tags:
            component: uaa
          tls_port: 8443
          uris:
          - uaa.((system_domain))
          - '*.uaa.((system_domain))'
          - login.((system_domain))
          - '*.login.((system_domain))'
    release: routing
  - name: statsd_injector
    properties:
      loggregator:
        tls:
          ca_cert: ((loggregator_tls_statsdinjector.ca))
          statsd_injector:
            cert: ((loggregator_tls_statsdinjector.certificate))
            key: ((loggregator_tls_statsdinjector.private_key))
    release: statsd-injector
  name: uaa
  networks:
  - name: ((network_name))
  stemcell: default
  vm_type: small
- azs:
  - z1
  instances: 1
  jobs:
  - name: blobstore
    properties:
      blobstore:
        admin_users:
        - password: ((blobstore_admin_users_password))
          username: blobstore-user
        public_tls:
          cert: ((blobstore_public.certificate))
          private_key: ((blobstore_public.private_key))
        secure_link:
          secret: ((blobstore_secure_link_secret))
        tls:
          cert: ((blobstore_tls.certificate))
          private_key: ((blobstore_tls.private_key))
      select_directories_to_backup:
      - buildpacks
      - packages
      - droplets
      system_domain: ((system_domain))
    release: capi
  - name: route_registrar
    properties:
      nats:
        tls:
          client_cert: ((nats_client_cert.certificate))
          client_key: ((nats_client_cert.private_key))
          enabled: true
      route_registrar:
        routes:
        - name: blobstore
          registration_interval: 20s
          server_cert_domain_san: blobstore.((system_domain))
          tags:
            component: blobstore
          tls_port: 8081
          uris:
          - blobstore.((system_domain))
    release: routing
  migrated_from:
  - name: blobstore
  name: singleton-blobstore
  networks:
  - name: ((network_name))
  persistent_disk_type: 100GB
  stemcell: default
  update:
    serial: true
  vm_type: small
- azs:
  - z1
  instances: 1
  jobs:
  - name: redis
    release: capi
  - name: cloud_controller_ng
    properties:
      app_domains: ((app_domains))
      app_ssh:
        host_key_fingerprint: ((diego_ssh_proxy_host_key.public_key_fingerprint))
      build: v40.14.0
      cc:
        buildpacks:
          blobstore_type: webdav
          webdav_config:
            blobstore_timeout: 5
            ca_cert: ((blobstore_tls.ca))
            password: ((blobstore_admin_users_password))
            private_endpoint: https://blobstore.service.cf.internal:4443
            public_endpoint: https://blobstore.((system_domain))
            username: blobstore-user
        database_encryption:
          current_key_label: encryption_key_0
          keys:
            encryption_key_0: ((cc_db_encryption_key))
        db_encryption_key: ((cc_db_encryption_key))
        default_running_security_groups:
        - public_networks
        - dns
        default_stack: cflinuxfs4
        default_staging_security_groups:
        - public_networks
        - dns
        diego:
          docker_staging_stack: cflinuxfs4
          droplet_destinations:
            cflinuxfs4: /home/vcap
            windows: /Users/vcap
          lifecycle_bundles:
            buildpack/cflinuxfs4: buildpack_app_lifecycle/buildpack_app_lifecycle.tgz
            buildpack/windows: buildpack_app_lifecycle/buildpack_app_lifecycle.tgz
            docker: docker_app_lifecycle/docker_app_lifecycle.tgz
        droplets:
          blobstore_type: webdav
          webdav_config:
            blobstore_timeout: 5
            ca_cert: ((blobstore_tls.ca))
            password: ((blobstore_admin_users_password))
            private_endpoint: https://blobstore.service.cf.internal:4443
            public_endpoint: https://blobstore.((system_domain))
            username: blobstore-user
        install_buildpacks:
        - name: staticfile_buildpack
          package: staticfile-buildpack-cflinuxfs4
        - name: java_buildpack
          package: java-buildpack-cflinuxfs4
        - name: ruby_buildpack
          package: ruby-buildpack-cflinuxfs4
        - name: dotnet_core_buildpack
          package: dotnet-core-buildpack-cflinuxfs4
        - name: nodejs_buildpack
          package: nodejs-buildpack-cflinuxfs4
        - name: go_buildpack
          package: go-buildpack-cflinuxfs4
        - name: python_buildpack
          package: python-buildpack-cflinuxfs4
        - name: php_buildpack
          package: php-buildpack-cflinuxfs4
        - name: nginx_buildpack
          package: nginx-buildpack-cflinuxfs4
        - name: r_buildpack
          package: r-buildpack-cflinuxfs4
        - name: binary_buildpack
          package: binary-buildpack-cflinuxfs4
        logcache:
          host: log-cache.service.cf.internal
        logcache_tls:
          certificate: ((cc_logcache_tls.certificate))
          private_key: ((cc_logcache_tls.private_key))
        mutual_tls:
          ca_cert: ((cc_tls.ca))
          private_key: ((cc_tls.private_key))
          public_cert: ((cc_tls.certificate))
        packages:
          blobstore_type: webdav
          webdav_config:
            blobstore_timeout: 5
            ca_cert: ((blobstore_tls.ca))
            password: ((blobstore_admin_users_password))
            private_endpoint: https://blobstore.service.cf.internal:4443
            public_endpoint: https://blobstore.((system_domain))
            username: blobstore-user
        prom_scraper_tls:
          ca_cert: ((cc_prom_scraper_scrape_tls.ca))
          private_key: ((cc_prom_scraper_scrape_tls.private_key))
          public_cert: ((cc_prom_scraper_scrape_tls.certificate))
        public_tls:
          ca_cert: ((cc_public_tls.ca))
          certificate: ((cc_public_tls.certificate))
          private_key: ((cc_public_tls.private_key))
        resource_pool:
          blobstore_type: webdav
          webdav_config:
            blobstore_timeout: 5
            ca_cert: ((blobstore_tls.ca))
            password: ((blobstore_admin_users_password))
            private_endpoint: https://blobstore.service.cf.internal:4443
            public_endpoint: https://blobstore.((system_domain))
            username: blobstore-user
        security_group_definitions:
        - name: public_networks
          rules:
          - destination: 0.0.0.0-9.255.255.255
            protocol: all
          - destination: 11.0.0.0-169.253.255.255
            protocol: all
          - destination: 169.255.0.0-172.15.255.255
            protocol: all
          - destination: 172.32.0.0-192.167.255.255
            protocol: all
          - destination: 192.169.0.0-255.255.255.255
            protocol: all
        - name: dns
          rules:
          - destination: 0.0.0.0/0
            ports: "53"
            protocol: tcp
          - destination: 0.0.0.0/0
            ports: "53"
            protocol: udp
        stacks:
        - description: Cloud Foundry Linux-based filesystem (Ubuntu 22.04)
          name: cflinuxfs4
        staging_upload_password: ((cc_staging_upload_password))
        staging_upload_user: staging_user
        temporary_use_logcache: true
      ccdb:
        address: sql-db.service.cf.internal
        ca_cert: ((mysql_server_certificate.ca))
        databases:
        - name: cloud_controller
          tag: cc
        db_scheme: mysql
        port: 3306
        roles:
        - name: cloud_controller
          password: ((cc_database_password))
          tag: admin
      credhub_api:
        ca_cert: ((credhub_tls.ca))
      name: cf-deployment
      router:
        route_services_secret: ((router_route_services_secret))
      routing_api:
        enabled: true
      ssl: {}
      system_domain: ((system_domain))
      uaa:
        ca_cert: ((uaa_ssl.ca))
        clients:
          cc-service-dashboards:
            secret: ((uaa_clients_cc-service-dashboards_secret))
          cc_routing:
            secret: ((uaa_clients_cc-routing_secret))
          cc_service_key_client:
            secret: ((uaa_clients_cc_service_key_client_secret))
          cloud_controller_username_lookup:
            secret: ((uaa_clients_cloud_controller_username_lookup_secret))
        url: https://uaa.((system_domain))
      version: 40
    provides:
      cloud_controller:
        as: cloud_controller
        shared: true
    release: capi
  - name: binary-buildpack
    release: binary-buildpack
  - name: dotnet-core-buildpack
    release: dotnet-core-buildpack
  - name: go-buildpack
    release: go-buildpack
  - name: java-buildpack
    release: java-buildpack
  - name: nodejs-buildpack
    release: nodejs-buildpack
  - name: nginx-buildpack
    release: nginx-buildpack
  - name: r-buildpack
    release: r-buildpack
  - name: php-buildpack
    release: php-buildpack
  - name: python-buildpack
    release: python-buildpack
  - name: ruby-buildpack
    release: ruby-buildpack
  - name: staticfile-buildpack
    release: staticfile-buildpack
  - name: route_registrar
    properties:
      nats:
        tls:
          client_cert: ((nats_client_cert.certificate))
          client_key: ((nats_client_cert.private_key))
          enabled: true
      route_registrar:
        routes:
        - health_check:
            name: api-health-check
            script_path: /var/vcap/jobs/cloud_controller_ng/bin/cloud_controller_ng_health_check
            timeout: 6s
          name: api
          port: 9022
          registration_interval: 10s
          server_cert_domain_san: api.((system_domain))
          tags:
            component: CloudController
          tls_port: 9024
          uris:
          - api.((system_domain))
        - name: policy-server
          registration_interval: 20s
          server_cert_domain_san: api.((system_domain))
          tls_port: 4002
          uris:
          - api.((system_domain))/networking
        - health_check:
            name: routing-api-health-check
            script_path: /var/vcap/jobs/routing-api/bin/routing_api_health_check
            timeout: 6s
          name: routing-api
          registration_interval: 20s
          server_cert_domain_san: routing-api.service.cf.internal
          tls_port: 3001
          uris:
          - api.((system_domain))/routing
    release: routing
  - name: statsd_injector
    properties:
      loggregator:
        tls:
          ca_cert: ((loggregator_tls_statsdinjector.ca))
          statsd_injector:
            cert: ((loggregator_tls_statsdinjector.certificate))
            key: ((loggregator_tls_statsdinjector.private_key))
    release: statsd-injector
  - name: file_server
    properties:
      bpm:
        enabled: true
      enable_consul_service_registration: false
      logging:
        format:
          timestamp: rfc3339
      loggregator:
        app_metric_exclusion_filter:
        - absolute_entitlement
        - absolute_usage
        ca_cert: ((loggregator_tls_agent.ca))
        cert: ((loggregator_tls_agent.certificate))
        key: ((loggregator_tls_agent.private_key))
        use_v2_api: true
    release: diego
  - name: routing-api
    properties:
      routing_api:
        enabled_api_endpoints: both
        locket:
          api_location: locket.service.cf.internal:8891
          ca_cert: ((diego_locket_client.ca))
          client_cert: ((diego_locket_client.certificate))
          client_key: ((diego_locket_client.private_key))
        mtls_ca: ((routing_api_tls_client.ca))
        mtls_client_cert: ((routing_api_tls_client.certificate))
        mtls_client_key: ((routing_api_tls_client.private_key))
        mtls_server_cert: ((routing_api_tls.certificate))
        mtls_server_key: ((routing_api_tls.private_key))
        router_groups:
        - name: default-tcp
          reservable_ports: 1024-1033
          type: tcp
        skip_consul_lock: true
        sqldb:
          ca_cert: ((mysql_server_certificate.ca))
          host: sql-db.service.cf.internal
          password: ((routing_api_database_password))
          port: 3306
          schema: routing-api
          type: mysql
          username: routing-api
        system_domain: ((system_domain))
      uaa:
        ca_cert: ((uaa_ssl.ca))
        tls_port: 8443
    release: routing
  - name: policy-server
    properties:
      database:
        ca_cert: ((mysql_server_certificate.ca))
        host: sql-db.service.cf.internal
        name: network_policy
        password: ((network_policy_database_password))
        port: 3306
        require_ssl: true
        type: mysql
        username: network_policy
      enable_space_developer_self_service: true
      enable_tls: true
      server_cert: ((network_policy_server_external.certificate))
      server_key: ((network_policy_server_external.private_key))
      uaa_ca: ((uaa_ssl.ca))
      uaa_client_secret: ((uaa_clients_network_policy_secret))
    release: cf-networking
  - name: policy-server-internal
    properties:
      ca_cert: ((network_policy_server.ca))
      server_cert: ((network_policy_server.certificate))
      server_key: ((network_policy_server.private_key))
    release: cf-networking
  - name: policy-server-asg-syncer
    properties:
      cc_internal:
        client_cert: ((policy_server_asg_syncer_cc_client.certificate))
        client_key: ((policy_server_asg_syncer_cc_client.private_key))
      locket:
        address: locket.service.cf.internal:8891
        ca_cert: ((asg_syncer_locket_client.ca))
        client_cert: ((asg_syncer_locket_client.certificate))
        client_key: ((asg_syncer_locket_client.private_key))
      uaa_ca: ((uaa_ssl.ca))
      uaa_client_secret: ((uaa_clients_network_policy_secret))
    release: cf-networking
  - name: cc_uploader
    properties:
      capi:
        cc_uploader:
          cc:
            ca_cert: ((cc_bridge_cc_uploader.ca))
            client_cert: ((cc_bridge_cc_uploader.certificate))
            client_key: ((cc_bridge_cc_uploader.private_key))
          mutual_tls:
            ca_cert: ((cc_bridge_cc_uploader_server.ca))
            server_cert: ((cc_bridge_cc_uploader_server.certificate))
            server_key: ((cc_bridge_cc_uploader_server.private_key))
    release: capi
  - name: loggr-udp-forwarder
    properties:
      loggregator:
        tls:
          ca: ((loggregator_tls_agent.ca))
          cert: ((loggregator_tls_agent.certificate))
          key: ((loggregator_tls_agent.private_key))
      metrics:
        ca_cert: ((loggr_udp_forwarder_tls.ca))
        cert: ((loggr_udp_forwarder_tls.certificate))
        key: ((loggr_udp_forwarder_tls.private_key))
        server_name: loggr_udp_forwarder_metrics
    release: loggregator-agent
  name: api
  networks:
  - name: ((network_name))
  stemcell: default
  vm_extensions:
  - 50GB_ephemeral_disk
  vm_type: small
- azs:
  - z1
  instances: 1
  jobs:
  - name: cloud_controller_worker
    properties:
      cc:
        buildpacks:
          blobstore_type: webdav
          webdav_config:
            blobstore_timeout: 5
            ca_cert: ((blobstore_tls.ca))
            password: ((blobstore_admin_users_password))
            private_endpoint: https://blobstore.service.cf.internal:4443
            public_endpoint: https://blobstore.((system_domain))
            username: blobstore-user
        database_encryption:
          current_key_label: encryption_key_0
          keys:
            encryption_key_0: ((cc_db_encryption_key))
        db_encryption_key: ((cc_db_encryption_key))
        diego:
          droplet_destinations:
            cflinuxfs4: /home/vcap
            windows: /Users/vcap
          lifecycle_bundles:
            buildpack/cflinuxfs4: buildpack_app_lifecycle/buildpack_app_lifecycle.tgz
            buildpack/windows: buildpack_app_lifecycle/buildpack_app_lifecycle.tgz
            docker: docker_app_lifecycle/docker_app_lifecycle.tgz
        droplets:
          blobstore_type: webdav
          webdav_config:
            blobstore_timeout: 5
            ca_cert: ((blobstore_tls.ca))
            password: ((blobstore_admin_users_password))
            private_endpoint: https://blobstore.service.cf.internal:4443
            public_endpoint: https://blobstore.((system_domain))
            username: blobstore-user
        mutual_tls:
          ca_cert: ((cc_tls.ca))
          private_key: ((cc_tls.private_key))
          public_cert: ((cc_tls.certificate))
        packages:
          blobstore_type: webdav
          webdav_config:
            blobstore_timeout: 5
            ca_cert: ((blobstore_tls.ca))
            password: ((blobstore_admin_users_password))
            private_endpoint: https://blobstore.service.cf.internal:4443
            public_endpoint: https://blobstore.((system_domain))
            username: blobstore-user
        resource_pool:
          blobstore_type: webdav
          webdav_config:
            blobstore_timeout: 5
            ca_cert: ((blobstore_tls.ca))
            password: ((blobstore_admin_users_password))
            private_endpoint: https://blobstore.service.cf.internal:4443
            public_endpoint: https://blobstore.((system_domain))
            username: blobstore-user
        staging_upload_password: ((cc_staging_upload_password))
        staging_upload_user: staging_user
      ccdb:
        address: sql-db.service.cf.internal
        ca_cert: ((mysql_server_certificate.ca))
        databases:
        - name: cloud_controller
          tag: cc
        db_scheme: mysql
        port: 3306
        roles:
        - name: cloud_controller
          password: ((cc_database_password))
          tag: admin
      routing_api:
        enabled: true
      ssl: {}
      system_domain: ((system_domain))
      uaa:
        ca_cert: ((uaa_ssl.ca))
        clients:
          cc-service-dashboards:
            secret: ((uaa_clients_cc-service-dashboards_secret))
          cc_routing:
            secret: ((uaa_clients_cc-routing_secret))
    release: capi
  - name: loggr-udp-forwarder
    properties:
      loggregator:
        tls:
          ca: ((loggregator_tls_agent.ca))
          cert: ((loggregator_tls_agent.certificate))
          key: ((loggregator_tls_agent.private_key))
      metrics:
        ca_cert: ((loggr_udp_forwarder_tls.ca))
        cert: ((loggr_udp_forwarder_tls.certificate))
        key: ((loggr_udp_forwarder_tls.private_key))
        server_name: loggr_udp_forwarder_metrics
    release: loggregator-agent
  name: cc-worker
  networks:
  - name: ((network_name))
  stemcell: default
  vm_type: minimal
- azs:
  - z1
  instances: 1
  jobs:
  - name: cfdot
    properties:
      tls:
        ca_certificate: ((diego_rep_client.ca))
        certificate: ((diego_rep_client.certificate))
        private_key: ((diego_rep_client.private_key))
    release: diego
  - name: auctioneer
    properties:
      bpm:
        enabled: true
      diego:
        auctioneer:
          bbs:
            ca_cert: ((diego_bbs_client.ca))
            client_cert: ((diego_bbs_client.certificate))
            client_key: ((diego_bbs_client.private_key))
          ca_cert: ((diego_auctioneer_server.ca))
          rep:
            ca_cert: ((diego_rep_client.ca))
            client_cert: ((diego_rep_client.certificate))
            client_key: ((diego_rep_client.private_key))
            require_tls: true
          server_cert: ((diego_auctioneer_server.certificate))
          server_key: ((diego_auctioneer_server.private_key))
          skip_consul_lock: true
      enable_consul_service_registration: false
      logging:
        format:
          timestamp: rfc3339
      loggregator:
        app_metric_exclusion_filter:
        - absolute_entitlement
        - absolute_usage
        ca_cert: ((loggregator_tls_agent.ca))
        cert: ((loggregator_tls_agent.certificate))
        key: ((loggregator_tls_agent.private_key))
        use_v2_api: true
    release: diego
  - name: cloud_controller_clock
    properties:
      cc:
        buildpacks:
          blobstore_type: webdav
          webdav_config:
            blobstore_timeout: 5
            ca_cert: ((blobstore_tls.ca))
            password: ((blobstore_admin_users_password))
            private_endpoint: https://blobstore.service.cf.internal:4443
            public_endpoint: https://blobstore.((system_domain))
            username: blobstore-user
        database_encryption:
          current_key_label: encryption_key_0
          keys:
            encryption_key_0: ((cc_db_encryption_key))
        db_encryption_key: ((cc_db_encryption_key))
        diego:
          droplet_destinations:
            cflinuxfs4: /home/vcap
            windows: /Users/vcap
          lifecycle_bundles:
            buildpack/cflinuxfs4: buildpack_app_lifecycle/buildpack_app_lifecycle.tgz
            buildpack/windows: buildpack_app_lifecycle/buildpack_app_lifecycle.tgz
            docker: docker_app_lifecycle/docker_app_lifecycle.tgz
        droplets:
          blobstore_type: webdav
          webdav_config:
            blobstore_timeout: 5
            ca_cert: ((blobstore_tls.ca))
            password: ((blobstore_admin_users_password))
            private_endpoint: https://blobstore.service.cf.internal:4443
            public_endpoint: https://blobstore.((system_domain))
            username: blobstore-user
        mutual_tls:
          ca_cert: ((cc_tls.ca))
          private_key: ((cc_tls.private_key))
          public_cert: ((cc_tls.certificate))
        packages:
          blobstore_type: webdav
          webdav_config:
            blobstore_timeout: 5
            ca_cert: ((blobstore_tls.ca))
            password: ((blobstore_admin_users_password))
            private_endpoint: https://blobstore.service.cf.internal:4443
            public_endpoint: https://blobstore.((system_domain))
            username: blobstore-user
        resource_pool:
          blobstore_type: webdav
          webdav_config:
            blobstore_timeout: 5
            ca_cert: ((blobstore_tls.ca))
            password: ((blobstore_admin_users_password))
            private_endpoint: https://blobstore.service.cf.internal:4443
            public_endpoint: https://blobstore.((system_domain))
            username: blobstore-user
        staging_upload_password: ((cc_staging_upload_password))
        staging_upload_user: staging_user
      ccdb:
        address: sql-db.service.cf.internal
        ca_cert: ((mysql_server_certificate.ca))
        databases:
        - name: cloud_controller
          tag: cc
        db_scheme: mysql
        port: 3306
        roles:
        - name: cloud_controller
          password: ((cc_database_password))
          tag: admin
      routing_api:
        enabled: true
      ssl:
        skip_cert_verify: true
      system_domain: ((system_domain))
      uaa:
        ca_cert: ((uaa_ssl.ca))
        clients:
          cc-service-dashboards:
            secret: ((uaa_clients_cc-service-dashboards_secret))
          cc_routing:
            secret: ((uaa_clients_cc-routing_secret))
        ssl:
          port: 8443
    release: capi
  - name: cc_deployment_updater
    properties:
      cc:
        database_encryption:
          current_key_label: encryption_key_0
          keys:
            encryption_key_0: ((cc_db_encryption_key))
        db_encryption_key: ((cc_db_encryption_key))
        diego:
          droplet_destinations:
            cflinuxfs4: /home/vcap
            windows: /Users/vcap
          lifecycle_bundles:
            buildpack/cflinuxfs4: buildpack_app_lifecycle/buildpack_app_lifecycle.tgz
            buildpack/windows: buildpack_app_lifecycle/buildpack_app_lifecycle.tgz
            docker: docker_app_lifecycle/docker_app_lifecycle.tgz
        mutual_tls:
          ca_cert: ((cc_tls.ca))
          private_key: ((cc_tls.private_key))
          public_cert: ((cc_tls.certificate))
      ccdb:
        address: sql-db.service.cf.internal
        ca_cert: ((mysql_server_certificate.ca))
        databases:
        - name: cloud_controller
          tag: cc
        db_scheme: mysql
        port: 3306
        roles:
        - name: cloud_controller
          password: ((cc_database_password))
          tag: admin
    release: capi
  - name: service-discovery-controller
    properties:
      dnshttps:
        client:
          ca: ((cf_app_sd_server_tls.ca))
        server:
          tls: ((cf_app_sd_server_tls))
      nats:
        cert_chain: ((nats_client_cert.certificate))
        private_key: ((nats_client_cert.private_key))
        tls_enabled: true
    release: cf-networking
  - name: statsd_injector
    properties:
      loggregator:
        tls:
          ca_cert: ((loggregator_tls_statsdinjector.ca))
          statsd_injector:
            cert: ((loggregator_tls_statsdinjector.certificate))
            key: ((loggregator_tls_statsdinjector.private_key))
    release: statsd-injector
  - name: tps
    properties:
      capi:
        tps:
          bbs:
            ca_cert: ((diego_bbs_client.ca))
            client_cert: ((diego_bbs_client.certificate))
            client_key: ((diego_bbs_client.private_key))
          cc:
            ca_cert: ((cc_bridge_tps.ca))
            client_cert: ((cc_bridge_tps.certificate))
            client_key: ((cc_bridge_tps.private_key))
          watcher:
            locket:
              api_location: locket.service.cf.internal:8891
            skip_consul_lock: true
    release: capi
  - name: ssh_proxy
    properties:
      backends:
        tls:
          ca_certificates:
          - ((diego_instance_identity_ca.ca))
          client_certificate: ((ssh_proxy_backends_tls.certificate))
          client_private_key: ((ssh_proxy_backends_tls.private_key))
          enabled: true
      bpm:
        enabled: true
      diego:
        ssh_proxy:
          bbs:
            ca_cert: ((diego_bbs_client.ca))
            client_cert: ((diego_bbs_client.certificate))
            client_key: ((diego_bbs_client.private_key))
          disable_healthcheck_server: true
          enable_cf_auth: true
          host_key: ((diego_ssh_proxy_host_key.private_key))
          uaa:
            ca_cert: ((uaa_ssl.ca))
          uaa_secret: ((uaa_clients_ssh-proxy_secret))
      enable_consul_service_registration: false
      logging:
        format:
          timestamp: rfc3339
      loggregator:
        app_metric_exclusion_filter:
        - absolute_entitlement
        - absolute_usage
        ca_cert: ((loggregator_tls_agent.ca))
        cert: ((loggregator_tls_agent.certificate))
        key: ((loggregator_tls_agent.private_key))
        use_v2_api: true
    release: diego
  - name: loggr-syslog-binding-cache
    properties:
      aggregate_drains:
      - ca: ((log_cache_syslog_tls.ca))
        cert: ((syslog_agent_log_cache_tls.certificate))
        key: ((syslog_agent_log_cache_tls.private_key))
        url: syslog-tls://log-cache.service.cf.internal:6067?include-metrics-deprecated=true&ssl-strict-internal=true
      api:
        tls:
          ca_cert: ((cc_tls.ca))
          cert: ((binding_cache_api_tls.certificate))
          cn: cloud-controller-ng.service.cf.internal
          key: ((binding_cache_api_tls.private_key))
      external_port: 9000
      metrics:
        ca_cert: ((loggr_syslog_binding_cache_metrics_tls.ca))
        cert: ((loggr_syslog_binding_cache_metrics_tls.certificate))
        key: ((loggr_syslog_binding_cache_metrics_tls.private_key))
        server_name: loggr_syslog_binding_cache_metrics
      tls:
        ca_cert: ((binding_cache_tls.ca))
        cert: ((binding_cache_tls.certificate))
        cn: binding-cache
        key: ((binding_cache_tls.private_key))
    release: loggregator-agent
  - name: loggr-udp-forwarder
    properties:
      loggregator:
        tls:
          ca: ((loggregator_tls_agent.ca))
          cert: ((loggregator_tls_agent.certificate))
          key: ((loggregator_tls_agent.private_key))
      metrics:
        ca_cert: ((loggr_udp_forwarder_tls.ca))
        cert: ((loggr_udp_forwarder_tls.certificate))
        key: ((loggr_udp_forwarder_tls.private_key))
        server_name: loggr_udp_forwarder_metrics
    release: loggregator-agent
  migrated_from:
  - name: cc-bridge
  - name: cc-clock
  - name: diego-brain
  name: scheduler
  networks:
  - name: ((network_name))
  stemcell: default
  vm_extensions:
  - diego-ssh-proxy-network-properties
  vm_type: minimal
- azs:
  - z1
  instances: 3
  jobs:
  - name: gorouter
    properties:
      nats:
        cert_chain: ((nats_client_cert.certificate))
        private_key: ((nats_client_cert.private_key))
        tls_enabled: true
      router:
        backends:
          ca: ((gorouter_backend_tls.ca))
          cert_chain: ((gorouter_backend_tls.certificate))
          private_key: ((gorouter_backend_tls.private_key))
        ca_certs:
        - ((diego_instance_identity_ca.ca))
        - ((cc_tls.ca))
        - ((uaa_ssl.ca))
        - ((network_policy_server_external.ca))
        - ((routing_api_tls.ca))
        enable_ssl: true
        route_services_secret: ((router_route_services_secret))
        status:
          password: ((router_status_password))
          tls:
            certificate: ((gorouter_lb_health_tls.certificate))
            key: ((gorouter_lb_health_tls.private_key))
            port: 8443
          user: router-status
        tls_pem:
        - cert_chain: ((router_ssl.certificate))
          private_key: ((router_ssl.private_key))
        tracing:
          enable_zipkin: true
      routing_api:
        enabled: true
      uaa:
        ca_cert: ((uaa_ssl.ca))
        clients:
          gorouter:
            secret: ((uaa_clients_gorouter_secret))
        ssl:
          port: 8443
    release: routing
  - name: loggr-udp-forwarder
    properties:
      loggregator:
        tls:
          ca: ((loggregator_tls_agent.ca))
          cert: ((loggregator_tls_agent.certificate))
          key: ((loggregator_tls_agent.private_key))
      metrics:
        ca_cert: ((loggr_udp_forwarder_tls.ca))
        cert: ((loggr_udp_forwarder_tls.certificate))
        key: ((loggr_udp_forwarder_tls.private_key))
        server_name: loggr_udp_forwarder_metrics
    release: loggregator-agent
  name: router
  networks:
  - name: ((network_name))
    static_ips: ((router_static_ips))
  stemcell: default
  update:
    serial: true
  vm_extensions:
  - cf-router-network-properties
  vm_type: minimal
- azs:
  - z1
  instances: 1
  jobs:
  - name: log-cache
    properties:
      health_addr: localhost:6060
      metrics:
        ca_cert: ((log_cache_metrics_tls.ca))
        cert: ((log_cache_metrics_tls.certificate))
        key: ((log_cache_metrics_tls.private_key))
        server_name: log_cache_metrics
      tls:
        ca_cert: ((log_cache.ca))
        cert: ((log_cache.certificate))
        key: ((log_cache.private_key))
    provides:
      log-cache:
        shared: true
    release: log-cache
  - name: log-cache-gateway
    properties:
      gateway_addr: localhost:8081
      metrics:
        ca_cert: ((log_cache_gateway_metrics_tls.ca))
        cert: ((log_cache_gateway_metrics_tls.certificate))
        key: ((log_cache_gateway_metrics_tls.private_key))
        server_name: log_cache_gateway_metrics
      proxy_cert: ((log_cache_proxy_tls.certificate))
      proxy_key: ((log_cache_proxy_tls.private_key))
    release: log-cache
  - name: log-cache-syslog-server
    properties:
      metrics:
        ca_cert: ((log_cache_syslog_server_metrics_tls.ca))
        cert: ((log_cache_syslog_server_metrics_tls.certificate))
        key: ((log_cache_syslog_server_metrics_tls.private_key))
        server_name: log_cache_syslog_server_metrics
      syslog_client_ca_cert: ((syslog_agent_log_cache_tls.ca))
      tls:
        cert: ((log_cache_syslog_tls.certificate))
        key: ((log_cache_syslog_tls.private_key))
    release: log-cache
  - name: route_registrar
    properties:
      nats:
        tls:
          client_cert: ((nats_client_cert.certificate))
          client_key: ((nats_client_cert.private_key))
          enabled: true
      route_registrar:
        routes:
        - name: log-cache-reverse-proxy
          port: 8083
          registration_interval: 20s
          server_cert_domain_san: log-cache.((system_domain))
          tls_port: 8083
          uris:
          - log-cache.((system_domain))
          - '*.log-cache.((system_domain))'
    release: routing
  - name: log-cache-cf-auth-proxy
    properties:
      cc:
        ca_cert: ((cc_tls.ca))
        common_name: cloud-controller-ng.service.cf.internal
      external_cert: ((logcache_ssl.certificate))
      external_key: ((logcache_ssl.private_key))
      metrics:
        ca_cert: ((log_cache_cf_auth_proxy_metrics_tls.ca))
        cert: ((log_cache_cf_auth_proxy_metrics_tls.certificate))
        key: ((log_cache_cf_auth_proxy_metrics_tls.private_key))
        server_name: log_cache_cf_auth_proxy_metrics
      proxy_ca_cert: ((log_cache.ca))
      proxy_port: 8083
      uaa:
        ca_cert: ((uaa_ssl.ca))
        client_id: doppler
        client_secret: ((uaa_clients_doppler_secret))
        internal_addr: https://uaa.service.cf.internal:8443
    release: log-cache
  name: log-cache
  networks:
  - name: ((network_name))
  stemcell: default
  vm_type: small-highmem
- azs:
  - z1
  instances: 1
  jobs:
  - name: doppler
    properties:
      loggregator:
        tls:
          ca_cert: ((loggregator_tls_doppler.ca))
          doppler:
            cert: ((loggregator_tls_doppler.certificate))
            key: ((loggregator_tls_doppler.private_key))
    provides:
      doppler:
        as: doppler
        shared: true
    release: loggregator
  name: doppler
  networks:
  - name: ((network_name))
  stemcell: default
  vm_type: minimal
- azs:
  - z1
  instances: 3
  jobs:
  - name: bosh-dns-adapter
    properties:
      dnshttps:
        client:
          tls: ((cf_app_sd_client_tls))
        server:
          ca: ((cf_app_sd_client_tls.ca))
      internal_domains:
      - apps.internal.
    release: cf-networking
  - name: cflinuxfs4-rootfs-setup
    properties:
      cflinuxfs4-rootfs:
        trusted_certs:
        - ((diego_instance_identity_ca.ca))
        - ((credhub_tls.ca))
        - ((uaa_ssl.ca))
    release: cflinuxfs4
  - name: garden
    properties:
      garden:
        cleanup_process_dirs_on_wait: true
        containerd_mode: true
        debug_listen_address: 127.0.0.1:17019
        default_container_grace_time: 0
        deny_networks:
        - 0.0.0.0/0
        destroy_containers_on_start: true
        network_plugin: /var/vcap/packages/runc-cni/bin/garden-external-networker
        network_plugin_extra_args:
        - --configFile=/var/vcap/jobs/garden-cni/config/adapter.json
      logging:
        format:
          timestamp: rfc3339
    release: garden-runc
  - name: rep
    properties:
      bpm:
        enabled: true
      containers:
        proxy:
          enabled: true
          require_and_verify_client_certificates: true
          trusted_ca_certificates:
          - ((gorouter_backend_tls.ca))
          - ((ssh_proxy_backends_tls.ca))
          verify_subject_alt_name:
          - gorouter.service.cf.internal
          - ssh-proxy.service.cf.internal
        trusted_ca_certificates:
        - ((diego_instance_identity_ca.ca))
        - ((credhub_tls.ca))
        - ((uaa_ssl.ca))
      diego:
        executor:
          instance_identity_ca_cert: ((diego_instance_identity_ca.certificate))
          instance_identity_key: ((diego_instance_identity_ca.private_key))
        rep:
          preloaded_rootfses:
          - cflinuxfs4:/var/vcap/packages/cflinuxfs4/rootfs.tar
      enable_consul_service_registration: false
      enable_declarative_healthcheck: true
      logging:
        format:
          timestamp: rfc3339
      loggregator:
        app_metric_exclusion_filter:
        - absolute_entitlement
        - absolute_usage
        ca_cert: ((loggregator_tls_agent.ca))
        cert: ((loggregator_tls_agent.certificate))
        key: ((loggregator_tls_agent.private_key))
        use_v2_api: true
      tls:
        ca_cert: ((diego_rep_agent_v2.ca))
        cert: ((diego_rep_agent_v2.certificate))
        key: ((diego_rep_agent_v2.private_key))
    release: diego
  - name: cfdot
    properties:
      tls:
        ca_certificate: ((diego_rep_client.ca))
        certificate: ((diego_rep_client.certificate))
        private_key: ((diego_rep_client.private_key))
    release: diego
  - name: route_emitter
    properties:
      bpm:
        enabled: true
      diego:
        route_emitter:
          bbs:
            ca_cert: ((diego_bbs_client.ca))
            client_cert: ((diego_bbs_client.certificate))
            client_key: ((diego_bbs_client.private_key))
          local_mode: true
          nats:
            tls:
              client_cert: ((nats_client_cert.certificate))
              client_key: ((nats_client_cert.private_key))
              enabled: true
      internal_routes:
        enabled: true
      logging:
        format:
          timestamp: rfc3339
      loggregator:
        app_metric_exclusion_filter:
        - absolute_entitlement
        - absolute_usage
        ca_cert: ((loggregator_tls_agent.ca))
        cert: ((loggregator_tls_agent.certificate))
        key: ((loggregator_tls_agent.private_key))
        use_v2_api: true
      tcp:
        enabled: true
      uaa:
        ca_cert: ((uaa_ssl.ca))
        client_secret: ((uaa_clients_tcp_emitter_secret))
    release: diego
  - name: garden-cni
    properties:
      cni_config_dir: /var/vcap/jobs/silk-cni/config/cni
      cni_plugin_dir: /var/vcap/packages/silk-cni/bin
    release: cf-networking
  - name: netmon
    release: silk
  - name: vxlan-policy-agent
    properties:
      ca_cert: ((network_policy_client.ca))
      client_cert: ((network_policy_client.certificate))
      client_key: ((network_policy_client.private_key))
      loggregator:
        app_metric_exclusion_filter:
        - absolute_entitlement
        - absolute_usage
        ca_cert: ((loggregator_tls_agent.ca))
        cert: ((loggregator_tls_agent.certificate))
        key: ((loggregator_tls_agent.private_key))
        use_v2_api: true
    release: silk
  - name: silk-daemon
    properties:
      ca_cert: ((silk_daemon.ca))
      client_cert: ((silk_daemon.certificate))
      client_key: ((silk_daemon.private_key))
    release: silk
  - name: silk-cni
    properties:
      dns_servers:
      - 169.254.0.2
    release: silk
  - name: silk-datastore-syncer
    release: silk
  - name: loggr-udp-forwarder
    properties:
      loggregator:
        tls:
          ca: ((loggregator_tls_agent.ca))
          cert: ((loggregator_tls_agent.certificate))
          key: ((loggregator_tls_agent.private_key))
      metrics:
        ca_cert: ((loggr_udp_forwarder_tls.ca))
        cert: ((loggr_udp_forwarder_tls.certificate))
        key: ((loggr_udp_forwarder_tls.private_key))
        server_name: loggr_udp_forwarder_metrics
    release: loggregator-agent
  name: diego-cell
  networks:
  - name: ((network_name))
  stemcell: default
  vm_extensions:
  - 100GB_ephemeral_disk
  vm_type: small-highmem
- azs:
  - z1
  instances: 1
  jobs:
  - consumes:
      doppler:
        from: doppler
    name: loggregator_trafficcontroller
    properties:
      cc:
        internal_service_hostname: cloud-controller-ng.service.cf.internal
        mutual_tls:
          ca_cert: ((cc_tls.ca))
        tls_port: 9023
      loggregator:
        outgoing_cert: ((loggregator_trafficcontroller_tls.certificate))
        outgoing_key: ((loggregator_trafficcontroller_tls.private_key))
        tls:
          ca_cert: ((loggregator_tls_tc.ca))
          cc_trafficcontroller:
            cert: ((loggregator_tls_cc_tc.certificate))
            key: ((loggregator_tls_cc_tc.private_key))
          trafficcontroller:
            cert: ((loggregator_tls_tc.certificate))
            key: ((loggregator_tls_tc.private_key))
        uaa:
          client_secret: ((uaa_clients_doppler_secret))
      ssl: {}
      system_domain: ((system_domain))
      uaa:
        ca_cert: ((uaa_ssl.ca))
        internal_url: https://uaa.service.cf.internal:8443
    release: loggregator
  - name: reverse_log_proxy
    properties:
      loggregator:
        tls:
          ca_cert: ((loggregator_tls_rlp.ca))
          reverse_log_proxy:
            cert: ((loggregator_tls_rlp.certificate))
            key: ((loggregator_tls_rlp.private_key))
    provides:
      reverse_log_proxy:
        as: reverse_log_proxy
        shared: true
    release: loggregator
  - name: reverse_log_proxy_gateway
    properties:
      cc:
        ca_cert: ((loggregator_rlp_gateway_tls_cc.ca))
        capi_internal_addr: https://cloud-controller-ng.service.cf.internal:9023
        cert: ((loggregator_rlp_gateway_tls_cc.certificate))
        common_name: cloud-controller-ng.service.cf.internal
        key: ((loggregator_rlp_gateway_tls_cc.private_key))
      http:
        address: 0.0.0.0:8088
        cert: ((loggregator_rlp_gateway_tls.certificate))
        key: ((loggregator_rlp_gateway_tls.private_key))
      logs_provider:
        ca_cert: ((loggregator_rlp_gateway.ca))
        client_cert: ((loggregator_rlp_gateway.certificate))
        client_key: ((loggregator_rlp_gateway.private_key))
      metrics:
        ca_cert: ((rlp_gateway_metrics_tls.ca))
        cert: ((rlp_gateway_metrics_tls.certificate))
        key: ((rlp_gateway_metrics_tls.private_key))
        server_name: rlp_gateway_metrics
      uaa:
        ca_cert: ((uaa_ssl.ca))
        client_id: doppler
        client_secret: ((uaa_clients_doppler_secret))
        internal_addr: https://uaa.service.cf.internal:8443
    release: loggregator
  - name: route_registrar
    properties:
      nats:
        tls:
          client_cert: ((nats_client_cert.certificate))
          client_key: ((nats_client_cert.private_key))
          enabled: true
      route_registrar:
        routes:
        - name: doppler
          registration_interval: 20s
          server_cert_domain_san: doppler.((system_domain))
          tls_port: 8081
          uris:
          - doppler.((system_domain))
          - '*.doppler.((system_domain))'
        - name: rlp-gateway
          registration_interval: 20s
          server_cert_domain_san: log-stream.((system_domain))
          tls_port: 8088
          uris:
          - log-stream.((system_domain))
          - '*.log-stream.((system_domain))'
    release: routing
  name: log-api
  networks:
  - name: ((network_name))
  stemcell: default
  vm_type: minimal
- azs:
  - z1
  instances: 1
  jobs:
  - name: credhub
    properties:
      credhub:
        authentication:
          mutual_tls:
            trusted_cas:
            - ((diego_instance_identity_ca.ca))
          uaa:
            ca_certs:
            - ((uaa_ssl.ca))
            url: https://uaa.service.cf.internal:8443
        authorization:
          acls:
            enabled: true
          permissions:
          - actors:
            - uaa-client:credhub_admin_client
            operations:
            - read
            - write
            - delete
            - read_acl
            - write_acl
            path: /*
          - actors:
            - uaa-client:cc_service_key_client
            operations:
            - read
            path: /*
        ca_certificate: |
          ((credhub_tls.ca))
        data_storage:
          database: credhub
          host: sql-db.service.cf.internal
          password: ((credhub_database_password))
          port: 3306
          tls_ca: ((mysql_server_certificate.ca))
          type: mysql
          username: credhub
        encryption:
          keys:
          - active: true
            key_properties:
              encryption_password: ((credhub_encryption_password))
            provider_name: internal-provider
          providers:
          - name: internal-provider
            type: internal
        internal_url: https://credhub.service.cf.internal
        tls: ((credhub_tls))
    release: credhub
  name: credhub
  networks:
  - name: ((network_name))
  stemcell: default
  vm_type: minimal
- azs:
  - z1
  instances: 1
  jobs:
  - name: rotate_cc_database_key
    properties: {}
    release: capi
  lifecycle: errand
  name: rotate-cc-database-key
  networks:
  - name: ((network_name))
  stemcell: default
  vm_type: minimal
manifest_version: v40.14.0
name: ((deployment_name))
releases:
- name: binary-buildpack
  sha1: 14a97ac4bc7422bfa583db75ae23554b7f040a74
  url: https://bosh.io/d/github.com/cloudfoundry/binary-buildpack-release?v=1.1.12
  version: 1.1.12
- name: bpm
  sha1: 8052def173f1e1d87dcbbce353dd2e6d1df96177
  url: https://bosh.io/d/github.com/cloudfoundry/bpm-release?v=1.2.19
  version: 1.2.19
- name: capi
  sha1: 77dd093f0c3e171e2e5198c94e38c3b3d153ed53
  url: https://bosh.io/d/github.com/cloudfoundry/capi-release?v=1.182.0
  version: 1.182.0
- name: cf-networking
  sha1: 28ae3c49a0509d0899353273059d122529e632dc
  url: https://bosh.io/d/github.com/cloudfoundry/cf-networking-release?v=3.46.0
  version: 3.46.0
- name: cf-smoke-tests
  sha1: a02481272db3c15f2f8406e615c298e73797bdba
  url: https://bosh.io/d/github.com/cloudfoundry/cf-smoke-tests-release?v=42.0.148
  version: 42.0.148
- name: cflinuxfs4
  sha1: 35fc004408a2c5fac0012ed84943cba240c34f25
  url: https://bosh.io/d/github.com/cloudfoundry/cflinuxfs4-release?v=1.98.0
  version: 1.98.0
- name: credhub
  sha1: 7ce94a3786d3b0bc13b54bc21f047e0557783a47
  url: https://bosh.io/d/github.com/pivotal-cf/credhub-release?v=2.12.75
  version: 2.12.75
- name: diego
  sha1: c5cdb3ef88a5211a3a0e50890deff9481e6bec5b
  url: https://bosh.io/d/github.com/cloudfoundry/diego-release?v=2.100.0
  version: 2.100.0
- name: dotnet-core-buildpack
  sha1: b17d25c66090cabc14ae0fdbdcafdce74db9fa3f
  url: https://bosh.io/d/github.com/cloudfoundry/dotnet-core-buildpack-release?v=2.4.28
  version: 2.4.28
- name: garden-runc
  sha1: 727479842888aa9752b0f556702d987424ef7254
  url: https://bosh.io/d/github.com/cloudfoundry/garden-runc-release?v=1.53.0
  version: 1.53.0
- name: go-buildpack
  sha1: 20f45cad398f3eab829aa216b882c0f27ac51587
  url: https://bosh.io/d/github.com/cloudfoundry/go-buildpack-release?v=1.10.19
  version: 1.10.19
- name: java-buildpack
  sha1: 39cf6dadbf5f902c8b40c76fe45fd8f9003a3c46
  url: https://bosh.io/d/github.com/cloudfoundry/java-buildpack-release?v=4.70.0
  version: 4.70.0
- name: loggregator
  sha1: 6a41e9642d8e3cd6191c0b54e7678719800b2826
  url: https://bosh.io/d/github.com/cloudfoundry/loggregator-release?v=107.0.14
  version: 107.0.14
- name: nats
  sha1: 945d4fe29150cb8091a21f295a6a163b735b5dd4
  url: https://bosh.io/d/github.com/cloudfoundry/nats-release?v=56.19.0
  version: 56.19.0
- name: nginx-buildpack
  sha1: f96f4a188c6e8c1c7e548760da26baaf4ed950ee
  url: https://bosh.io/d/github.com/cloudfoundry/nginx-buildpack-release?v=1.2.14
  version: 1.2.14
- name: r-buildpack
  sha1: e7b8c156dcdbd9e84fe50b9e439834aeb617144d
  url: https://bosh.io/d/github.com/cloudfoundry/r-buildpack-release?v=1.2.12
  version: 1.2.12
- name: nodejs-buildpack
  sha1: cd68a8e077cc8a010927f0f426782824abcd31d5
  url: https://bosh.io/d/github.com/cloudfoundry/nodejs-buildpack-release?v=1.8.25
  version: 1.8.25
- name: php-buildpack
  sha1: 52606e82f48f07d838a93bdd811c8c9036bfbe5c
  url: https://bosh.io/d/github.com/cloudfoundry/php-buildpack-release?v=4.6.19
  version: 4.6.19
- name: pxc
  sha1: f80440917c86a6c3fc96dbdb2dccb2c6c3439e1d
  url: https://bosh.io/d/github.com/cloudfoundry/pxc-release?v=1.0.28
  version: 1.0.28
- name: python-buildpack
  sha1: c0a16536d9b56887f80e52a0e6c0bec501cc426a
  url: https://bosh.io/d/github.com/cloudfoundry/python-buildpack-release?v=1.8.25
  version: 1.8.25
- name: routing
  sha1: f65dfe377269b712db1b24df102b605b73391fcb
  url: https://bosh.io/d/github.com/cloudfoundry/routing-release?v=0.298.0
  version: 0.298.0
- name: ruby-buildpack
  sha1: f71c2ed493cc31b3ba9f38af4cd12ee395c51427
  url: https://bosh.io/d/github.com/cloudfoundry/ruby-buildpack-release?v=1.10.15
  version: 1.10.15
- name: silk
  sha1: 868ed3c5f61e9ffb2d2b4bd044e8eeddcc1bfd1d
  url: https://bosh.io/d/github.com/cloudfoundry/silk-release?v=3.46.0
  version: 3.46.0
- name: staticfile-buildpack
  sha1: 7fa2ce8cb85931b551d8bd53baa6e068ced64e1a
  url: https://bosh.io/d/github.com/cloudfoundry/staticfile-buildpack-release?v=1.6.13
  version: 1.6.13
- name: statsd-injector
  sha1: eaa5e465d8310113ae90bc9b7d956319f1315d14
  url: https://bosh.io/d/github.com/cloudfoundry/statsd-injector-release?v=1.11.40
  version: 1.11.40
- name: uaa
  sha1: 2880e700842c87d6ae615a9b41e152d0091fc3bd
  url: https://bosh.io/d/github.com/cloudfoundry/uaa-release?v=77.9.0
  version: 77.9.0
- name: loggregator-agent
  sha1: 4a65bd6a4e5585025fb1c24d7698057a091e1b50
  url: https://bosh.io/d/github.com/cloudfoundry/loggregator-agent-release?v=8.1.1
  version: 8.1.1
- name: log-cache
  sha1: 49e40454c467ac76224565cce7d51739af9a96d1
  url: https://bosh.io/d/github.com/cloudfoundry/log-cache-release?v=3.0.11
  version: 3.0.11
- name: bosh-dns-aliases
  sha1: 55b3dced813ff9ed92a05cda02156e4b5604b273
  url: https://bosh.io/d/github.com/cloudfoundry/bosh-dns-aliases-release?v=0.0.4
  version: 0.0.4
- name: cf-cli
  sha1: 19fc1dcd4cb5dcc4df42e42317afd175dcb91903
  url: https://bosh.io/d/github.com/bosh-packages/cf-cli-release?v=1.63.0
  version: 1.63.0
stemcells:
- alias: default
  os: ubuntu-jammy
  version: "1.445"
update:
  canaries: 1
  canary_watch_time: 30000-1200000
  max_in_flight: 1
  serial: false
  update_watch_time: 5000-1200000
variables:
- name: blobstore_admin_users_password
  type: password
- name: blobstore_secure_link_secret
  type: password
- name: cc_db_encryption_key
  type: password
- name: cc_staging_upload_password
  type: password
- name: cf_app_sd_ca
  options:
    common_name: service-discovery-controller.service.cf.internal
    is_ca: true
  type: certificate
- name: cf_app_sd_client_tls
  options:
    alternative_names:
    - service-discovery-controller.service.cf.internal
    ca: cf_app_sd_ca
    common_name: service-discovery-controller.service.cf.internal
    extended_key_usage:
    - client_auth
  type: certificate
  update_mode: converge
- name: cf_app_sd_server_tls
  options:
    alternative_names:
    - service-discovery-controller.service.cf.internal
    ca: cf_app_sd_ca
    common_name: service-discovery-controller.service.cf.internal
    extended_key_usage:
    - server_auth
  type: certificate
  update_mode: converge
- name: cf_mysql_mysql_admin_password
  type: password
- name: cf_mysql_mysql_cluster_health_password
  type: password
- name: cf_mysql_mysql_galera_healthcheck_endpoint_password
  type: password
- name: cf_mysql_mysql_galera_healthcheck_password
  type: password
- name: cf_mysql_proxy_api_password
  type: password
- name: cc_database_password
  type: password
- name: credhub_database_password
  type: password
- name: diego_database_password
  type: password
- name: uaa_database_password
  type: password
- name: routing_api_database_password
  type: password
- name: network_policy_database_password
  type: password
- name: network_connectivity_database_password
  type: password
- name: uaa_default_encryption_passphrase
  type: password
- name: silk_ca
  options:
    common_name: silk-ca
    is_ca: true
  type: certificate
- name: silk_controller
  options:
    alternative_names:
    - silk-controller.service.cf.internal
    ca: silk_ca
    common_name: silk-controller.service.cf.internal
    extended_key_usage:
    - server_auth
  type: certificate
  update_mode: converge
- name: silk_daemon
  options:
    alternative_names:
    - silk-daemon
    ca: silk_ca
    common_name: silk-daemon
    extended_key_usage:
    - client_auth
  type: certificate
  update_mode: converge
- name: network_policy_ca
  options:
    common_name: networkPolicyCA
    is_ca: true
  type: certificate
- name: network_policy_server_external
  options:
    alternative_names:
    - api.((system_domain))
    ca: network_policy_ca
    common_name: api.((system_domain))
    extended_key_usage:
    - server_auth
  type: certificate
- name: network_policy_server
  options:
    alternative_names:
    - policy-server.service.cf.internal
    ca: network_policy_ca
    common_name: policy-server.service.cf.internal
    extended_key_usage:
    - server_auth
  type: certificate
  update_mode: converge
- name: network_policy_client
  options:
    alternative_names:
    - clientName
    ca: network_policy_ca
    common_name: clientName
    extended_key_usage:
    - client_auth
  type: certificate
  update_mode: converge
- name: uaa_clients_routing_api_client_secret
  type: password
- name: uaa_clients_tcp_emitter_secret
  type: password
- name: nats_password
  type: password
- name: router_status_password
  type: password
- name: cf_admin_password
  type: password
- name: router_route_services_secret
  type: password
- name: uaa_admin_client_secret
  type: password
- name: uaa_clients_cc-routing_secret
  type: password
- name: uaa_clients_cc-service-dashboards_secret
  type: password
- name: uaa_clients_cc_service_key_client_secret
  type: password
- name: uaa_clients_cf_smoke_tests_secret
  type: password
- name: uaa_clients_cloud_controller_username_lookup_secret
  type: password
- name: uaa_clients_doppler_secret
  type: password
- name: uaa_clients_gorouter_secret
  type: password
- name: uaa_clients_network_policy_secret
  type: password
- name: uaa_clients_ssh-proxy_secret
  type: password
- name: uaa_clients_tcp_router_secret
  type: password
- name: diego_bbs_encryption_keys_passphrase
  type: password
- name: credhub_encryption_password
  type: password
- name: credhub_admin_client_secret
  type: password
- name: diego_ssh_proxy_host_key
  type: ssh
- name: uaa_jwt_signing_key
  type: rsa
- name: service_cf_internal_ca
  options:
    common_name: internalCA
    is_ca: true
  type: certificate
- name: asg_syncer_locket_client
  options:
    alternative_names:
    - locket-client
    ca: service_cf_internal_ca
    common_name: locket-client
    extended_key_usage:
    - client_auth
  type: certificate
  update_mode: converge
- name: blobstore_tls
  options:
    alternative_names:
    - blobstore.service.cf.internal
    ca: service_cf_internal_ca
    common_name: blobstore.service.cf.internal
  type: certificate
  update_mode: converge
- name: blobstore_public
  options:
    alternative_names:
    - blobstore.((system_domain))
    ca: service_cf_internal_ca
    common_name: blobstore.((system_domain))
  type: certificate
  update_mode: converge
- name: diego_auctioneer_client
  options:
    alternative_names:
    - auctioneer-client
    ca: service_cf_internal_ca
    common_name: auctioneer-client
    extended_key_usage:
    - client_auth
  type: certificate
  update_mode: converge
- name: diego_auctioneer_server
  options:
    alternative_names:
    - '*.auctioneer.service.cf.internal'
    - auctioneer.service.cf.internal
    ca: service_cf_internal_ca
    common_name: auctioneer.service.cf.internal
    extended_key_usage:
    - server_auth
  type: certificate
- name: diego_bbs_client
  options:
    alternative_names:
    - bbs-client
    ca: service_cf_internal_ca
    common_name: bbs-client
    extended_key_usage:
    - client_auth
  type: certificate
  update_mode: converge
- name: diego_bbs_server
  options:
    alternative_names:
    - '*.bbs.service.cf.internal'
    - bbs.service.cf.internal
    ca: service_cf_internal_ca
    common_name: bbs.service.cf.internal
    extended_key_usage:
    - server_auth
    - client_auth
  type: certificate
- name: diego_rep_client
  options:
    alternative_names:
    - rep-client
    ca: service_cf_internal_ca
    common_name: rep-client
    extended_key_usage:
    - client_auth
  type: certificate
  update_mode: converge
- name: diego_rep_agent_v2
  options:
    alternative_names:
    - '*.cell.service.cf.internal'
    - cell.service.cf.internal
    - 127.0.0.1
    - localhost
    ca: service_cf_internal_ca
    common_name: cell.service.cf.internal
    extended_key_usage:
    - client_auth
    - server_auth
  type: certificate
- name: loggregator_ca
  options:
    common_name: loggregatorCA
    is_ca: true
  type: certificate
- name: loggregator_tls_statsdinjector
  options:
    alternative_names:
    - statsdinjector
    ca: loggregator_ca
    common_name: statsdinjector
    extended_key_usage:
    - client_auth
  type: certificate
  update_mode: converge
- name: loggregator_tls_agent
  options:
    alternative_names:
    - metron
    ca: loggregator_ca
    common_name: metron
    extended_key_usage:
    - client_auth
    - server_auth
  type: certificate
  update_mode: converge
- name: loggregator_tls_doppler
  options:
    alternative_names:
    - doppler
    ca: loggregator_ca
    common_name: doppler
    extended_key_usage:
    - client_auth
    - server_auth
  type: certificate
  update_mode: converge
- name: loggregator_tls_tc
  options:
    alternative_names:
    - trafficcontroller
    ca: loggregator_ca
    common_name: trafficcontroller
    extended_key_usage:
    - client_auth
    - server_auth
  type: certificate
  update_mode: converge
- name: loggregator_tls_cc_tc
  options:
    alternative_names:
    - trafficcontroller
    ca: service_cf_internal_ca
    common_name: trafficcontroller
    extended_key_usage:
    - client_auth
  type: certificate
  update_mode: converge
- name: loggregator_rlp_gateway_tls_cc
  options:
    alternative_names:
    - rlp-gateway
    ca: service_cf_internal_ca
    common_name: rlp-gateway
    extended_key_usage:
    - client_auth
  type: certificate
  update_mode: converge
- name: loggregator_tls_rlp
  options:
    alternative_names:
    - reverselogproxy
    ca: loggregator_ca
    common_name: reverselogproxy
    extended_key_usage:
    - client_auth
    - server_auth
  type: certificate
  update_mode: converge
- name: loggregator_rlp_gateway
  options:
    alternative_names:
    - rlp_gateway
    ca: loggregator_ca
    common_name: rlp_gateway
    extended_key_usage:
    - client_auth
  type: certificate
  update_mode: converge
- name: log_cache_ca
  options:
    common_name: log-cache
    is_ca: true
  type: certificate
- name: log_cache
  options:
    alternative_names:
    - log_cache
    - log-cache
    - logcache
    ca: log_cache_ca
    common_name: log-cache
    extended_key_usage:
    - client_auth
    - server_auth
  type: certificate
  update_mode: converge
- name: log_cache_to_loggregator_agent
  options:
    alternative_names:
    - log-cache
    ca: loggregator_ca
    common_name: log-cache
    extended_key_usage:
    - client_auth
  type: certificate
  update_mode: converge
- name: cc_logcache_tls
  options:
    alternative_names:
    - api.((system_domain))
    - cloud-controller-ng.service.cf.internal
    ca: log_cache_ca
    common_name: api.((system_domain))
    extended_key_usage:
    - client_auth
  type: certificate
  update_mode: converge
- name: logcache_ssl
  options:
    alternative_names:
    - log-cache
    - log-cache.((system_domain))
    - '*.log-cache.((system_domain))'
    ca: service_cf_internal_ca
    common_name: log-cache
  type: certificate
  update_mode: converge
- name: log_cache_proxy_tls
  options:
    alternative_names:
    - localhost
    ca: log_cache_ca
    common_name: localhost
  type: certificate
  update_mode: converge
- name: syslog_agent_log_cache_tls
  options:
    alternative_names:
    - syslog_agent
    ca: loggregator_ca
    common_name: syslog_agent
    extended_key_usage:
    - client_auth
  type: certificate
  update_mode: converge
- name: log_cache_syslog_tls
  options:
    alternative_names:
    - log-cache.service.cf.internal
    ca: loggregator_ca
    common_name: log-cache.service.cf.internal
    extended_key_usage:
    - server_auth
  type: certificate
  update_mode: converge
- name: router_ca
  options:
    common_name: routerCA
    is_ca: true
  type: certificate
- name: router_ssl
  options:
    alternative_names:
    - ((system_domain))
    - '*.((system_domain))'
    ca: router_ca
    common_name: routerSSL
  type: certificate
- name: routing_api_ca
  options:
    common_name: routing_api
    is_ca: true
  type: certificate
- name: routing_api_tls
  options:
    alternative_names:
    - routing-api.service.cf.internal
    ca: routing_api_ca
    common_name: routing-api.service.cf.internal
    extended_key_usage:
    - server_auth
  type: certificate
  update_mode: converge
- name: routing_api_tls_client
  options:
    alternative_names:
    - routing-api-client
    ca: routing_api_ca
    common_name: routing-api-client
    extended_key_usage:
    - client_auth
  type: certificate
  update_mode: converge
- name: uaa_ca
  options:
    common_name: uaaCA
    is_ca: true
  type: certificate
- name: uaa_ssl
  options:
    alternative_names:
    - uaa.service.cf.internal
    ca: uaa_ca
    common_name: uaa.service.cf.internal
  type: certificate
- name: uaa_login_saml
  options:
    alternative_names:
    - uaa_login_saml
    ca: uaa_ca
    common_name: uaa_login_saml
  type: certificate
  update_mode: converge
- name: uaa_jwt_signing_cert
  options:
    alternative_names:
    - uaa_jwt_signing_cert
    ca: uaa_ca
    common_name: uaa_jwt_signing_cert
  type: certificate
  update_mode: converge
- name: cc_tls
  options:
    alternative_names:
    - cloud-controller-ng.service.cf.internal
    ca: service_cf_internal_ca
    common_name: cloud-controller-ng.service.cf.internal
    extended_key_usage:
    - client_auth
    - server_auth
  type: certificate
  update_mode: converge
- name: cc_public_tls
  options:
    alternative_names:
    - api.((system_domain))
    - cloud-controller-ng.service.cf.internal
    ca: service_cf_internal_ca
    common_name: api.((system_domain))
  type: certificate
- name: cc_bridge_tps
  options:
    alternative_names:
    - tps_watcher
    ca: service_cf_internal_ca
    common_name: tps_watcher
    extended_key_usage:
    - client_auth
  type: certificate
  update_mode: converge
- name: cc_bridge_cc_uploader
  options:
    alternative_names:
    - cc_uploader
    ca: service_cf_internal_ca
    common_name: cc_uploader
    extended_key_usage:
    - client_auth
  type: certificate
  update_mode: converge
- name: policy_server_asg_syncer_cc_client
  options:
    alternative_names:
    - policy_server_asg_syncer_cc_client
    ca: service_cf_internal_ca
    common_name: policy_server_asg_syncer_cc_client
    extended_key_usage:
    - client_auth
  type: certificate
  update_mode: converge
- name: cc_bridge_cc_uploader_server
  options:
    alternative_names:
    - cc-uploader.service.cf.internal
    ca: service_cf_internal_ca
    common_name: cc-uploader.service.cf.internal
    extended_key_usage:
    - server_auth
  type: certificate
  update_mode: converge
- name: diego_locket_server
  options:
    alternative_names:
    - '*.locket.service.cf.internal'
    - locket.service.cf.internal
    ca: service_cf_internal_ca
    common_name: locket.service.cf.internal
    extended_key_usage:
    - server_auth
  type: certificate
- name: diego_locket_client
  options:
    alternative_names:
    - locket-client
    ca: service_cf_internal_ca
    common_name: locket-client
    extended_key_usage:
    - client_auth
  type: certificate
  update_mode: converge
- name: locket_database_password
  type: password
- name: application_ca
  options:
    common_name: appRootCA
    is_ca: true
  type: certificate
- name: diego_instance_identity_ca
  options:
    ca: application_ca
    common_name: instanceIdentityCA
    is_ca: true
  type: certificate
- name: gorouter_backend_tls
  options:
    alternative_names:
    - gorouter.service.cf.internal
    ca: service_cf_internal_ca
    common_name: gorouter_backend_tls
    extended_key_usage:
    - client_auth
  type: certificate
- name: gorouter_lb_health_tls
  options:
    alternative_names:
    - gorouter.service.cf.internal
    ca: service_cf_internal_ca
    common_name: gorouter_lb_health_tls
  type: certificate
- name: tcp_router_lb_health_tls
  options:
    alternative_names:
    - tcp-router.service.cf.internal
    ca: service_cf_internal_ca
    common_name: tcp_router_lb_health_tls
  type: certificate
- name: credhub_ca
  options:
    common_name: credhubServerCa
    is_ca: true
  type: certificate
- name: credhub_tls
  options:
    alternative_names:
    - credhub.service.cf.internal
    - credhub.((system_domain))
    ca: credhub_ca
    common_name: credhub.((system_domain))
  type: certificate
- name: ssh_proxy_backends_tls
  options:
    alternative_names:
    - ssh-proxy.service.cf.internal
    ca: service_cf_internal_ca
    common_name: ssh_proxy_backends_tls
    extended_key_usage:
    - client_auth
  type: certificate
- name: pxc_galera_ca
  options:
    common_name: pxc_galera_ca
    is_ca: true
  type: certificate
- name: pxc_server_ca
  options:
    common_name: pxc_server_ca
    is_ca: true
  type: certificate
- name: galera_server_certificate
  options:
    alternative_names:
    - galera_server_certificate
    ca: pxc_galera_ca
    common_name: galera_server_certificate
    extended_key_usage:
    - server_auth
    - client_auth
  type: certificate
  update_mode: converge
- name: mysql_server_certificate
  options:
    alternative_names:
    - sql-db.service.cf.internal
    ca: pxc_server_ca
    common_name: sql-db.service.cf.internal
  type: certificate
  update_mode: converge
- name: loggregator_rlp_gateway_tls
  options:
    alternative_names:
    - log-stream.((system_domain))
    - log-api.service.cf.internal
    ca: service_cf_internal_ca
    common_name: log-stream.((system_domain))
  type: certificate
  update_mode: converge
- name: loggregator_trafficcontroller_tls
  options:
    alternative_names:
    - doppler.((system_domain))
    - log-api.service.cf.internal
    ca: service_cf_internal_ca
    common_name: doppler.((system_domain))
  type: certificate
  update_mode: converge
- name: metric_scraper_ca
  options:
    common_name: metricScraperCA
    is_ca: true
  type: certificate
- name: log_cache_syslog_server_metrics_tls
  options:
    alternative_names:
    - log_cache_syslog_server_metrics
    ca: metric_scraper_ca
    common_name: log_cache_syslog_server_metrics
    extended_key_usage:
    - server_auth
  type: certificate
  update_mode: converge
- name: log_cache_metrics_tls
  options:
    alternative_names:
    - log_cache_metrics
    ca: metric_scraper_ca
    common_name: log_cache_metrics
    extended_key_usage:
    - server_auth
  type: certificate
  update_mode: converge
- name: log_cache_cf_auth_proxy_metrics_tls
  options:
    alternative_names:
    - log_cache_cf_auth_proxy_metrics
    ca: metric_scraper_ca
    common_name: log_cache_cf_auth_proxy_metrics
    extended_key_usage:
    - server_auth
  type: certificate
  update_mode: converge
- name: log_cache_gateway_metrics_tls
  options:
    alternative_names:
    - log_cache_gateway_metrics
    ca: metric_scraper_ca
    common_name: log_cache_gateway_metrics
    extended_key_usage:
    - server_auth
  type: certificate
  update_mode: converge
- name: forwarder_agent_metrics_tls
  options:
    alternative_names:
    - forwarder_agent_metrics
    ca: metric_scraper_ca
    common_name: forwarder_agent_metrics
    extended_key_usage:
    - server_auth
  type: certificate
  update_mode: converge
- name: loggregator_agent_metrics_tls
  options:
    alternative_names:
    - loggregator_agent_metrics
    ca: metric_scraper_ca
    common_name: loggregator_agent_metrics
    extended_key_usage:
    - server_auth
  type: certificate
  update_mode: converge
- name: loggr_udp_forwarder_tls
  options:
    alternative_names:
    - loggr_udp_forwarder_metrics
    ca: metric_scraper_ca
    common_name: loggr_udp_forwarder_metrics
    extended_key_usage:
    - server_auth
  type: certificate
  update_mode: converge
- name: syslog_agent_api_tls
  options:
    alternative_names:
    - syslog-agent
    ca: loggregator_ca
    common_name: syslog-agent
    extended_key_usage:
    - client_auth
  type: certificate
  update_mode: converge
- name: binding_cache_api_tls
  options:
    alternative_names:
    - binding-cache
    ca: service_cf_internal_ca
    common_name: binding-cache
    extended_key_usage:
    - client_auth
  type: certificate
  update_mode: converge
- name: binding_cache_tls
  options:
    alternative_names:
    - binding-cache
    ca: loggregator_ca
    common_name: binding-cache
    extended_key_usage:
    - server_auth
  type: certificate
  update_mode: converge
- name: syslog_agent_metrics_tls
  options:
    alternative_names:
    - syslog_agent_metrics
    ca: metric_scraper_ca
    common_name: syslog_agent_metrics
    extended_key_usage:
    - server_auth
  type: certificate
  update_mode: converge
- name: loggr_syslog_binding_cache_metrics_tls
  options:
    alternative_names:
    - loggr_syslog_binding_cache_metrics
    ca: metric_scraper_ca
    common_name: loggr_syslog_binding_cache_metrics
    extended_key_usage:
    - server_auth
  type: certificate
  update_mode: converge
- name: prom_scraper_scrape_tls
  options:
    alternative_names:
    - prom_scraper
    ca: metric_scraper_ca
    common_name: prom_scraper
    extended_key_usage:
    - client_auth
  type: certificate
  update_mode: converge
- name: prom_scraper_metrics_tls
  options:
    alternative_names:
    - prom_scraper_metrics
    ca: metric_scraper_ca
    common_name: prom_scraper_metrics
    extended_key_usage:
    - server_auth
  type: certificate
  update_mode: converge
- name: cc_prom_scraper_scrape_tls
  options:
    alternative_names:
    - cloud-controller-ng.service.cf.internal
    ca: metric_scraper_ca
    common_name: cloud-controller-ng.service.cf.internal
    extended_key_usage:
    - client_auth
    - server_auth
  type: certificate
  update_mode: converge
- name: rlp_gateway_metrics_tls
  options:
    alternative_names:
    - rlp_gateway_metrics
    ca: metric_scraper_ca
    common_name: rlp_gateway_metrics
    extended_key_usage:
    - server_auth
  type: certificate
  update_mode: converge
- name: nats_internal_ca
  options:
    common_name: nats_internal
    is_ca: true
  type: certificate
- name: nats_internal_cert
  options:
    alternative_names:
    - '*.nats.service.cf.internal'
    - nats.service.cf.internal
    ca: nats_internal_ca
    common_name: '*.nats.service.cf.internal'
    extended_key_usage:
    - client_auth
    - server_auth
  type: certificate
- name: nats_ca
  options:
    common_name: nats
    is_ca: true
  type: certificate
- name: nats_client_cert
  options:
    alternative_names:
    - nats_client
    ca: nats_ca
    common_name: nats_client
    extended_key_usage:
    - client_auth
  type: certificate
  update_mode: converge
- name: nats_server_cert
  options:
    alternative_names:
    - '*.nats.service.cf.internal'
    - nats.service.cf.internal
    ca: nats_ca
    common_name: nats.service.cf.internal
    extended_key_usage:
    - server_auth
  type: certificate
  update_mode: converge
