#! /usr/bin/env bash
set -euo pipefail

# To generate a manifest with variable interpolation placeholders intact,
# suitable to be committed to source control

base="$( cd "$( dirname "${BASH_SOURCE[0]}" )/../../../.." && pwd )"
repo="$( cd "$( dirname "${BASH_SOURCE[0]}" )/../../.." && pwd )"

# make sure we have concourse-deployment
if [[ ! -d "${repo}/tmp/concourse-deployment" ]] ; then
  pushd ${repo}/tmp > /dev/null
    git clone https://github.com/concourse/concourse-deployment.git &> /dev/null
  popd > /dev/null
fi

# checkout specific version of concourse-deployment
REF="v4.2.1"
echo "Checking out to concourse-deployment to ref: ${REF}"

pushd ${repo}/tmp/concourse-deployment > /dev/null
  git fetch &> /dev/null
  git checkout ${REF} &> /dev/null
  git log -1 --pretty=oneline
popd > /dev/null

# Generated manifest
manifest="${repo}/deployments/concourse/concourse.yml"

bosh -e prod interpolate "${repo}/tmp/concourse-deployment/cluster/concourse.yml" \
  -l "${repo}/tmp/concourse-deployment/versions.yml" \
  -o "${repo}/tmp/concourse-deployment/cluster/operations/basic-auth.yml" \
  -o "${repo}/tmp/concourse-deployment/cluster/operations/github-auth.yml" \
  -o "${repo}/tmp/concourse-deployment/cluster/operations/scale.yml" \
  -o "${repo}/deployments/concourse/ops-files/credhub.yml" \
  -o "${repo}/deployments/concourse/ops-files/concourse.yml" \
   > "${manifest}"

echo -e "# Generated file - do not edit directly!\n---\n$(cat $manifest)" > "$manifest"
echo "Generating manifest: $manifest"

bosh -e prod deploy -d concourse \
  --vars-file "${base}/bosh-secrets/vars-concourse.yml" \
  "${manifest}" \
  "$@"

echo "Finished deploying: concourse"
